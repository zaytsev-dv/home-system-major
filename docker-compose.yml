version: '3.7'

services:
  elasticsearch:
    image: elasticsearch:$ELK_VERSION
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTICSEARCH_USERNAME: "admin"
      ELASTICSEARCH_PASSWORD: "admin123"
      discovery.type: single-node
      XPACK_SECURITY_ENABLED: "true"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: "wget -q -O - http://admin:admin123@localhost:9200/_cat/health"
      interval: 1s
      timeout: 30s
      retries: 300
    networks:
      - skynet
      - elk
    restart: unless-stopped

  logstash:
    image: logstash:$ELK_VERSION
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      XPACK_MONITORING_ELASTICSEARCH_USERNAME: "admin"
      XPACK_MONITORING_ELASTICSEARCH_PASSWORD: "admin123"
      XPACK_MONITORING_ELASTICSEARCH_HOSTS: "elasticsearch:9200"
      XPACK_MONITORING_ENABLED: "true"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    networks:
      - skynet
      - elk
    restart: unless-stopped
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:${ELK_VERSION}
    environment:
      ELASTICSEARCH_USERNAME: "admin"
      ELASTICSEARCH_PASSWORD: "admin123"
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
    ports:
      - "5601:5601"
    networks:
      - skynet
      - elk
    restart: unless-stopped
    depends_on:
      - elasticsearch
      - logstash

  database:
    build: ./database/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: home_system_major
    ports:
      - "5432:5432"
    networks:
      - skynet
#    volumes:
#      - ./database/create_database_for_docker.sql:/docker-entrypoint-initdb.d/1.sql

  nginx:
    container_name: nginx
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - skynet

  jaeger:
    image: jaegertracing/all-in-one:1.21.0
    ports:
      - 5775:5775/udp
      - 14268:14268/tcp
      - 16686:16686
      - 8091:8091
    networks:
      - skynet

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./web/src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  home_system_major:
    build: ./
    restart: always
    container_name: $COMPOSE_PROJECT_NAME
#    image: zaytsevdv/home-system-major:dev-latest
    ports:
      - "8090:8090"
    networks:
      - skynet
    environment:
      spring.profiles.active: $SPRING_PROFILE_ACTIVE
      spring.mail.username: $SMTP_USER
      spring.mail.password: $SMTP_PASSWORD
      telegram-bot.token: $TELEGRAM_BOT_TOKEN
      telegram-bot.username: 'my_home_system_bot'
    links:
      - database
      - logstash
    depends_on:
      - database
      - nginx
      - logstash
      - jaeger
      - prometheus

networks:
  skynet:
    driver: bridge
  elk:
    driver: bridge

volumes:
  elasticsearch: